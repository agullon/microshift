---
# manage-repos tasks

- name: RHEL tasks
  block:
  - name: subscription-manager tasks
    block:
      - name: Check if we have subscription-manager installed
        ansible.builtin.command: which subscription-manager
        register: sm_present
        ignore_errors: true

      - name: Install subscription-manager
        ansible.builtin.dnf:
          name:
          - subscription-manager
        when: sm_present.rc != 0

      - name: Register host with subscription manager
        community.general.redhat_subscription:
          state: present
          username: "{{ rhel_username }}"
          password: "{{ rhel_password }}"

      - name: Enable repo management from subscription-manager
        ansible.builtin.command: subscription-manager config --rhsm.manage_repos=1
    when: manage_subscription

  - name: Slurp redhat-release
    ansible.builtin.slurp:
      src: /etc/redhat-release
    register: redhat_release_slurp

  - name: Set beta release of RHEL
    ansible.builtin.set_fact:
      rhel_beta: beta-
    when: "'Beta' in (redhat_release_slurp['content'] | b64decode)"

  - name: Set microshift_prerelease if microshift_version is a prerelease
    ansible.builtin.set_fact:
      microshift_prerelease: "{{ 'rc' in microshift_version or 'ec' in microshift_version }}"

  - name: Create microshift prerelease mirrors
    include_tasks: roles/manage-repos/tasks/create-mirrors.yaml
    loop: "{{ repo_list }}"
    when:
      - microshift_prerelease
      - not build_microshift

  - name: Enable required repos for microshift
    community.general.rhsm_repository:
      name: "{{ rhel_repos }}"
    when:
      - not microshift_prerelease

  - name: Install EPEL repo
    ansible.builtin.dnf:
      name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
      disable_gpg_check: true
      state: present
  when: ansible_distribution == "RedHat"

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: pbench-agent is installed
  ansible.builtin.set_fact:
    pbench_installed: true
  when: "'pbench-agent' in ansible_facts.packages"

- name: pbench-agent is not installed
  ansible.builtin.set_fact:
    pbench_installed: false
  when: "'pbench-agent' not in ansible_facts.packages"
