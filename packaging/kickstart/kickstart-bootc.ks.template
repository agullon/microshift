lang en_US.UTF-8
keyboard us
timezone UTC
text
reboot

# Partition the disk with hardware-specific boot and swap partitions, adding an
# LVM volume that contains a 10GB+ system root. The remainder of the volume will
# be used by the CSI driver for storing data.
zerombr
clearpart --all --initlabel
# Create boot and swap partitions as required by the current hardware platform
reqpart --add-boot
# Add an LVM volume group and allocate a system root logical volume
part pv.01 --grow
volgroup rhel pv.01
logvol / --vgname=rhel --fstype=xfs --size=10240 --name=root

# Lock root user account
rootpw --lock

# Configure network to use DHCP and activate on boot
network --bootproto=dhcp --device=link --activate --onboot=on

%pre-install --log=/dev/console --erroronfail

# Create a container registry authentication file
mkdir -p /etc/ostree/
cat > /etc/ostree/auth.json <<'EOF'
${AUTH_CONFIG}
EOF

# Delete an empty file or set permissions
if [ "$(wc -w < /etc/ostree/auth.json)" -eq 0 ] ; then
    rm -f /etc/ostree/auth.json
else
    chmod 600 /etc/ostree/auth.json
fi

# Create a container registry configuration file
mkdir -p /etc/containers/registries.conf.d/
cat > /etc/containers/registries.conf.d/999-microshift-registry.conf <<'EOF'
${REGISTRY_CONFIG}
EOF

# Delete an empty file or set permissions
if [ "$(wc -w < /etc/containers/registries.conf.d/999-microshift-registry.conf)" -eq 0 ] ; then
    rm -f /etc/containers/registries.conf.d/999-microshift-registry.conf
else
    chmod 644 /etc/containers/registries.conf.d/999-microshift-registry.conf
fi

%end

# Pull a 'bootc' image from a remote registry
ostreecontainer --url ${BOOTC_IMAGE_URL}

%post --log=/dev/console --erroronfail

# Create an OpenShift pull secret file
cat > /etc/crio/openshift-pull-secret <<'EOF'
${PULL_SECRET}
EOF
chmod 600 /etc/crio/openshift-pull-secret

# Create 'redhat' user account
useradd --password '${USER_PASSWD}' --groups wheel redhat

%end
